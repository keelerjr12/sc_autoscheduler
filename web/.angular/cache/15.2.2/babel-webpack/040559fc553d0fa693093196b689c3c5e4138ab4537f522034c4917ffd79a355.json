{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PersonnelPageComponent = class PersonnelPageComponent {\n  constructor(personAPI) {\n    this.personAPI = personAPI;\n    this.personViewModels = [];\n    this.personModels = new Map();\n    this.isEditable = [];\n    this.quals = ['Operations Supervisor', 'SOF', 'RSU Controller', 'RSU Observer', 'IPC Pilot', 'FPC Pilot', 'FCF Pilot', 'PIT IP', 'SEFE'];\n    this.qual_options = ['', 'X'];\n    this.assigned_orgs = [' ', 'M', 'N', 'O', 'P', 'X'];\n  }\n  ngOnInit() {\n    this.personAPI.getPersonnel().subscribe(persons => {\n      this.personModels = new Map(persons.map(person => [person.id, person]));\n      this.personViewModels = persons.map(person_dto => {\n        const mapped_quals = new Map(this.quals.map(qual => {\n          const qualified = person_dto.quals.filter(dto_qual => dto_qual == qual).length > 0 ? 'X' : '';\n          return [qual, qualified];\n        }));\n        const person_view = {\n          id: person_dto.id,\n          name: person_dto.last_name + ', ' + person_dto.first_name,\n          assigned_org: person_dto.assigned_org,\n          quals: mapped_quals\n        };\n        return person_view;\n      });\n      this.personViewModels.sort((a, b) => a.name.localeCompare(b.name));\n      this.isEditable = this.personViewModels.map(() => {\n        return false;\n      });\n    });\n  }\n  onEdit(row) {\n    this.isEditable[row] = true;\n  }\n  onSave(row) {\n    this.isEditable[row] = false;\n    const personVM = this.personViewModels[row];\n    const updatedQuals = [...personVM.quals].filter(([_, value]) => value == 'X').map((key, _) => key[0]);\n    let personModel = this.personModels.get(personVM.id);\n    if (personModel) {\n      personModel.assigned_org = personVM.assigned_org;\n      personModel.quals = updatedQuals;\n      this.personAPI.update(personModel).subscribe();\n    }\n  }\n};\nPersonnelPageComponent = __decorate([Component({\n  selector: 'sc-personnel-page',\n  templateUrl: './personnel-page.component.html',\n  styleUrls: ['./personnel-page.component.css']\n})], PersonnelPageComponent);\nexport { PersonnelPageComponent };","map":{"version":3,"mappings":"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","names":["Component","PersonnelPageComponent","constructor","personAPI","Map","quals","qual_options","assigned_orgs","ngOnInit","getPersonnel","subscribe","persons","personModels","map","person","id","personViewModels","person_dto","mapped_quals","qual","qualified","filter","dto_qual","length","person_view","name","last_name","first_name","assigned_org","sort","a","b","localeCompare","isEditable","onEdit","row","onSave","personVM","updatedQuals","_","value","key","personModel","get","update","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\ADMIN\\Documents\\source\\sparkcell-autoscheduler\\web\\src\\app\\personnel\\personnel-page\\personnel-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Person } from 'src/app/core/models/person.model';\r\nimport { PersonnelAPIService } from 'src/app/core/services/personnel-api.service';\r\nimport { PersonView } from '../shared/personview.model';\r\n\r\n@Component({\r\n  selector: 'sc-personnel-page',\r\n  templateUrl: './personnel-page.component.html',\r\n  styleUrls: ['./personnel-page.component.css']\r\n})\r\nexport class PersonnelPageComponent {\r\n  personViewModels: PersonView[] = [];\r\n  personModels: Map<number, Person> = new Map<number, Person>();\r\n  assigned_orgs: string[];\r\n  quals: string[];\r\n  qual_options: string[];\r\n  isEditable: boolean[] = [];\r\n\r\n  constructor(private personAPI: PersonnelAPIService) {\r\n\r\n    this.quals = [\r\n      'Operations Supervisor', 'SOF', 'RSU Controller', 'RSU Observer', 'IPC Pilot', 'FPC Pilot', 'FCF Pilot', 'PIT IP', 'SEFE'\r\n    ];\r\n\r\n    this.qual_options = ['', 'X']\r\n\r\n    this.assigned_orgs = [\r\n      ' ', 'M', 'N', 'O', 'P', 'X'\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.personAPI.getPersonnel().subscribe(persons => {\r\n      this.personModels = new Map(persons.map(person => [person.id, person]));\r\n\r\n      this.personViewModels = persons.map(person_dto => {\r\n        const mapped_quals = new Map(this.quals.map(qual => {\r\n          const qualified = person_dto.quals.filter(dto_qual => dto_qual == qual).length > 0 ? 'X' : ''\r\n          return [qual, qualified] \r\n        }));\r\n\r\n        const person_view: PersonView = {\r\n          id: person_dto.id,\r\n          name: person_dto.last_name + ', ' + person_dto.first_name,\r\n          assigned_org: person_dto.assigned_org,\r\n          quals: mapped_quals\r\n        };\r\n\r\n        return person_view;\r\n      });\r\n\r\n      this.personViewModels.sort((a, b) => a.name.localeCompare(b.name))\r\n\r\n      this.isEditable = this.personViewModels.map(() => {\r\n        return false;\r\n      });\r\n    });\r\n  }\r\n\r\n  onEdit(row: number) {\r\n    this.isEditable[row] = true;\r\n  }\r\n\r\n  onSave(row: number) {\r\n    this.isEditable[row] = false;\r\n\r\n    const personVM = this.personViewModels[row];\r\n    const updatedQuals = [...personVM.quals].filter(([_, value]) => value == 'X').map((key, _) => key[0]);\r\n\r\n    let personModel = this.personModels.get(personVM.id);\r\n    if (personModel) {\r\n      personModel.assigned_org = personVM.assigned_org;\r\n      personModel.quals = updatedQuals;\r\n      this.personAPI.update(personModel).subscribe();\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}