{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const IS_AUTHORIZED = true;\n    if (IS_AUTHORIZED) return true;\n    this.router.navigateByUrl('/auth');\n    return false;\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.Router));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,aAAa,GAAG,IAAI;IAE1B,IAAIA,aAAa,EACf,OAAO,IAAI;IAEb,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,OAAO,CAAC;IAClC,OAAO,KAAK;EACd;;;mBAZWP,gBAAgB;AAAA;;SAAhBA,gBAAgB;EAAAQ,SAAhBR,gBAAgB;EAAAS,YAFf;AAAM","names":["AuthGuardService","constructor","router","canActivate","route","state","IS_AUTHORIZED","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ADMIN\\Documents\\source\\sparkcell-autoscheduler\\web\\src\\app\\auth\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    const IS_AUTHORIZED = true;\r\n\r\n    if (IS_AUTHORIZED)\r\n      return true;\r\n\r\n    this.router.navigateByUrl('/auth')\r\n    return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}