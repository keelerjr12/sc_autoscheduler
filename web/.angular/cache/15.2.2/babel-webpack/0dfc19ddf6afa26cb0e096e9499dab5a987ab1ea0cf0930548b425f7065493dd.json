{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class ScheduleShellAPIService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n    this.ROUTE = 'shell/';\n  }\n  getFlyingShell(date) {\n    const url = this.config.getApiUrl() + this.ROUTE;\n    let params = new HttpParams();\n    params = params.set('date', date.toISOString().split('T')[0]);\n    console.log(params.get('date'));\n    return this.http.get(url, {\n      params: params\n    }).pipe(map(arr => arr.map(x => {\n      'num';\n\n      1, 'start_date_time';\n      '2022-12-05', 'org_name';\n      'test';\n    })));\n  }\n}\nScheduleShellAPIService.ɵfac = function ScheduleShellAPIService_Factory(t) {\n  return new (t || ScheduleShellAPIService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n};\nScheduleShellAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ScheduleShellAPIService,\n  factory: ScheduleShellAPIService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAG7D,SAASC,GAAG,QAAa,gBAAgB;;;;AAOzC,OAAM,MAAOC,uBAAuB;EAGlCC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAF5C,UAAK,GAAW,QAAQ;EAEuC;EAEvEC,cAAc,CAACC,IAAU;IACvB,MAAMC,GAAG,GAAG,IAAI,CAACH,MAAM,CAACI,SAAS,EAAE,GAAG,IAAI,CAACC,KAAK;IAChD,IAAIC,MAAM,GAAG,IAAIX,UAAU,EAAE;IAC7BW,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEL,IAAI,CAACM,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAACL,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC,CAAC;IAC/B,OAAO,IAAI,CAACb,IAAI,CAACa,GAAG,CAAMT,GAAG,EAAE;MAACG,MAAM,EAAEA;IAAM,CAAC,CAAC,CAACO,IAAI,CAACjB,GAAG,CAACkB,GAAG,IAAIA,GAAG,CAAClB,GAAG,CAACmB,CAAC,IAAG;MAAE,KAAK;;MAAE,CAAC,EAAE,iBAAiB;MAAE,YAAY,EAAE,UAAU;MAAE,MAAM;IAAA,CAAC,CAAC,CAAC,CAAC;EAClJ;;;mBAXWlB,uBAAuB;AAAA;;SAAvBA,uBAAuB;EAAAmB,SAAvBnB,uBAAuB;EAAAoB,YAFtB;AAAM","names":["HttpParams","map","ScheduleShellAPIService","constructor","http","config","getFlyingShell","date","url","getApiUrl","ROUTE","params","set","toISOString","split","console","log","get","pipe","arr","x","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ADMIN\\Documents\\source\\sparkcell-autoscheduler\\web\\src\\app\\core\\services\\schedule-shell-api.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ShellFlyingLine } from '../models/shell_flying_line.model';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScheduleShellAPIService {\r\n  private ROUTE: string = 'shell/';\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) { }\r\n\r\n  getFlyingShell(date: Date) : Observable<ShellFlyingLine[]> {\r\n    const url = this.config.getApiUrl() + this.ROUTE;\r\n    let params = new HttpParams();\r\n    params = params.set('date', date.toISOString().split('T')[0]);\r\n    console.log(params.get('date'));\r\n    return this.http.get<any>(url, {params: params}).pipe(map(arr => arr.map(x => {'num': 1, 'start_date_time': '2022-12-05', 'org_name': 'test'})))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}