{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/personnel-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PersonnelPageComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qual_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(qual_r2);\n  }\n}\nfunction PersonnelPageComponent_tr_12_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const org_r7 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", org_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(org_r7);\n  }\n}\nfunction PersonnelPageComponent_tr_12_td_8_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qual_opt_r11 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", qual_opt_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(qual_opt_r11);\n  }\n}\nfunction PersonnelPageComponent_tr_12_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 18)(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function PersonnelPageComponent_tr_12_td_8_Template_select_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const qual_r8 = restoredCtx.$implicit;\n      const person_r3 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(person_r3.quals.set(qual_r8, $event));\n    });\n    i0.ɵɵtemplate(4, PersonnelPageComponent_tr_12_td_8_option_4_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const qual_r8 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    const person_idx_r4 = ctx_r15.index;\n    const person_r3 = ctx_r15.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.isEditable[person_idx_r4] ? \"d-none\" : \"d-block\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(person_r3.quals.get(qual_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.isEditable[person_idx_r4] ? \"d-block\" : \"d-none\")(\"ngModel\", person_r3.quals.get(qual_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.qual_options);\n  }\n}\nfunction PersonnelPageComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 5)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"span\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function PersonnelPageComponent_tr_12_Template_select_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const person_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(person_r3.assigned_org = $event);\n    });\n    i0.ɵɵtemplate(7, PersonnelPageComponent_tr_12_option_7_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, PersonnelPageComponent_tr_12_td_8_Template, 5, 5, \"td\", 9);\n    i0.ɵɵelementStart(9, \"td\")(10, \"span\", 6)(11, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PersonnelPageComponent_tr_12_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const person_idx_r4 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onEdit(person_idx_r4));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(12, \"svg\", 11);\n    i0.ɵɵelement(13, \"path\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(14, \"button\", 13);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(15, \"svg\", 14);\n    i0.ɵɵelement(16, \"path\", 15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(17, \"span\", 6)(18, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function PersonnelPageComponent_tr_12_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const person_idx_r4 = restoredCtx.index;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onSave(person_idx_r4));\n    });\n    i0.ɵɵtext(19, \"Save\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const person_r3 = ctx.$implicit;\n    const person_idx_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", person_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.isEditable[person_idx_r4] ? \"d-none\" : \"d-block\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(person_r3.assigned_org);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.isEditable[person_idx_r4] ? \"d-block\" : \"d-none\")(\"ngModel\", person_r3.assigned_org);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.assigned_orgs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.quals);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.isEditable[person_idx_r4] ? \"d-none\" : \"d-block\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.isEditable[person_idx_r4] ? \"d-block\" : \"d-none\");\n  }\n}\nexport class PersonnelPageComponent {\n  constructor(personAPI) {\n    this.personAPI = personAPI;\n    this.personViewModels = [];\n    this.personModels = new Map();\n    this.isEditable = [];\n    this.quals = ['Operations Supervisor', 'SOF', 'RSU Controller', 'RSU Observer', 'IPC Pilot', 'FPC Pilot', 'FCF Pilot', 'PIT IP', 'SEFE'];\n    this.qual_options = ['', 'X'];\n    this.assigned_orgs = [' ', 'M', 'N', 'O', 'P', 'X'];\n  }\n  ngOnInit() {\n    this.personAPI.getPersonnel().subscribe(persons => {\n      this.personModels = new Map(persons.map(person => [person.id, person]));\n      this.personViewModels = persons.map(person_dto => {\n        const mapped_quals = new Map(this.quals.map(qual => {\n          const qualified = person_dto.quals.filter(dto_qual => dto_qual == qual).length > 0 ? 'X' : '';\n          return [qual, qualified];\n        }));\n        const person_view = {\n          id: person_dto.id,\n          name: person_dto.last_name + ', ' + person_dto.first_name,\n          assigned_org: person_dto.assigned_org,\n          quals: mapped_quals\n        };\n        return person_view;\n      });\n      this.personViewModels.sort((a, b) => a.name.localeCompare(b.name));\n      this.isEditable = this.personViewModels.map(() => {\n        return false;\n      });\n    });\n  }\n  onEdit(row) {\n    this.isEditable[row] = true;\n  }\n  onSave(row) {\n    this.isEditable[row] = false;\n    const personVM = this.personViewModels[row];\n    const updatedQuals = [...personVM.quals].filter(([_, value]) => value == 'X').map((key, _) => key[0]);\n    let personModel = this.personModels.get(personVM.id);\n    if (personModel) {\n      personModel.assigned_org = personVM.assigned_org;\n      personModel.quals = updatedQuals;\n      this.personAPI.update(personModel).subscribe();\n    }\n  }\n}\nPersonnelPageComponent.ɵfac = function PersonnelPageComponent_Factory(t) {\n  return new (t || PersonnelPageComponent)(i0.ɵɵdirectiveInject(i1.PersonnelAPIService));\n};\nPersonnelPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PersonnelPageComponent,\n  selectors: [[\"sc-personnel-page\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"table\", \"table-sm\", \"table-bordered\", \"table-hover\", \"table-striped\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"class\", \"rotate\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\", 1, \"rotate\"], [3, \"id\"], [3, \"ngClass\"], [1, \"form-select\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"qual\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"edit-btn\", \"btn\", \"btn-outline-secondary\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-pencil-fill\"], [\"d\", \"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-trash-fill\"], [\"d\", \"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"], [\"type\", \"button\", 1, \"save-btn\", \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"], [1, \"qual\"]],\n  template: function PersonnelPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Personnel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"th\", 1);\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 1);\n      i0.ɵɵtext(7, \"Assigned Flight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, PersonnelPageComponent_th_8_Template, 2, 1, \"th\", 2);\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Options\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, PersonnelPageComponent_tr_12_Template, 20, 10, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.quals);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.personViewModels);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"th.rotate[_ngcontent-%COMP%] {\\r\\n    max-width: 1.5em;\\r\\n    min-width: 1.5em;\\r\\n    writing-mode: vertical-rl;\\r\\n}\\r\\n\\r\\n.qual[_ngcontent-%COMP%] {\\r\\n    max-width: 1.5em;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGVyc29ubmVsL3BlcnNvbm5lbC1wYWdlL3BlcnNvbm5lbC1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbInRoLnJvdGF0ZSB7XHJcbiAgICBtYXgtd2lkdGg6IDEuNWVtO1xyXG4gICAgbWluLXdpZHRoOiAxLjVlbTtcclxuICAgIHdyaXRpbmctbW9kZTogdmVydGljYWwtcmw7XHJcbn1cclxuXHJcbi5xdWFsIHtcclxuICAgIG1heC13aWR0aDogMS41ZW07XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PersonnelPageComponent","constructor","personAPI","Map","quals","qual_options","assigned_orgs","ngOnInit","getPersonnel","subscribe","persons","personModels","map","person","id","personViewModels","person_dto","mapped_quals","qual","qualified","filter","dto_qual","length","person_view","name","last_name","first_name","assigned_org","sort","a","b","localeCompare","isEditable","onEdit","row","onSave","personVM","updatedQuals","_","value","key","personModel","get","update","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\ADMIN\\Documents\\source\\sparkcell-autoscheduler\\web\\src\\app\\personnel\\personnel-page\\personnel-page.component.html","C:\\Users\\ADMIN\\Documents\\source\\sparkcell-autoscheduler\\web\\src\\app\\personnel\\personnel-page\\personnel-page.component.ts"],"sourcesContent":["<h1>Personnel</h1>\r\n<table class=\"table table-sm table-bordered table-hover table-striped\">\r\n    <thead>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\">Assigned Flight</th>\r\n        <th *ngFor=\"let qual of quals\" scope=\"col\" class=\"rotate\">{{ qual }}</th>\r\n        <th>Options</th>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let person of personViewModels; index as person_idx\" [id]=\"person.id\">\r\n            <td>{{ person.name }}</td>\r\n            <td>\r\n                <span [ngClass]=\"isEditable[person_idx] ? 'd-none' : 'd-block'\">{{ person.assigned_org }}</span>\r\n                <select [ngClass]=\"isEditable[person_idx] ? 'd-block' : 'd-none'\" class=\"form-select\" [(ngModel)]=\"person.assigned_org\">\r\n                    <option *ngFor=\"let org of assigned_orgs\" value=\"{{ org }}\">{{ org }}</option>\r\n                </select>\r\n            </td>\r\n            <td *ngFor=\"let qual of quals; index as qual_idx\" class=\"qual\">\r\n                <span [ngClass]=\"isEditable[person_idx] ? 'd-none' : 'd-block'\">{{ person.quals.get(qual) }}</span>\r\n                <select [ngClass]=\"isEditable[person_idx] ? 'd-block' : 'd-none'\" class=\"form-select\" [ngModel]=\"person.quals.get(qual)\" (ngModelChange)=\"person.quals.set(qual, $event)\">\r\n                    <option *ngFor=\"let qual_opt of qual_options\" value=\"{{ qual_opt }}\">{{ qual_opt }}</option>\r\n                </select>\r\n            </td>\r\n            <td>\r\n                <span [ngClass]=\"isEditable[person_idx] ? 'd-none' : 'd-block'\">\r\n                    <button type=\"button\" class=\"edit-btn btn btn-outline-secondary\" (click)=\"onEdit(person_idx)\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-danger\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </span>\r\n                <span [ngClass]=\"isEditable[person_idx] ? 'd-block' : 'd-none'\">\r\n                    <button type=\"button\" class=\"save-btn btn btn-primary\" (click)=\"onSave(person_idx)\">Save</button>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\nimport { Person } from 'src/app/core/models/person.model';\r\nimport { PersonnelAPIService } from 'src/app/core/services/personnel-api.service';\r\nimport { PersonView } from '../shared/personview.model';\r\n\r\n@Component({\r\n  selector: 'sc-personnel-page',\r\n  templateUrl: './personnel-page.component.html',\r\n  styleUrls: ['./personnel-page.component.css']\r\n})\r\nexport class PersonnelPageComponent {\r\n  personViewModels: PersonView[] = [];\r\n  personModels: Map<number, Person> = new Map<number, Person>();\r\n  assigned_orgs: string[];\r\n  quals: string[];\r\n  qual_options: string[];\r\n  isEditable: boolean[] = [];\r\n\r\n  constructor(private personAPI: PersonnelAPIService) {\r\n\r\n    this.quals = [\r\n      'Operations Supervisor', 'SOF', 'RSU Controller', 'RSU Observer', 'IPC Pilot', 'FPC Pilot', 'FCF Pilot', 'PIT IP', 'SEFE'\r\n    ];\r\n\r\n    this.qual_options = ['', 'X']\r\n\r\n    this.assigned_orgs = [\r\n      ' ', 'M', 'N', 'O', 'P', 'X'\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.personAPI.getPersonnel().subscribe(persons => {\r\n      this.personModels = new Map(persons.map(person => [person.id, person]));\r\n\r\n      this.personViewModels = persons.map(person_dto => {\r\n        const mapped_quals = new Map(this.quals.map(qual => {\r\n          const qualified = person_dto.quals.filter(dto_qual => dto_qual == qual).length > 0 ? 'X' : ''\r\n          return [qual, qualified] \r\n        }));\r\n\r\n        const person_view: PersonView = {\r\n          id: person_dto.id,\r\n          name: person_dto.last_name + ', ' + person_dto.first_name,\r\n          assigned_org: person_dto.assigned_org,\r\n          quals: mapped_quals\r\n        };\r\n\r\n        return person_view;\r\n      });\r\n\r\n      this.personViewModels.sort((a, b) => a.name.localeCompare(b.name))\r\n\r\n      this.isEditable = this.personViewModels.map(() => {\r\n        return false;\r\n      });\r\n    });\r\n  }\r\n\r\n  onEdit(row: number) {\r\n    this.isEditable[row] = true;\r\n  }\r\n\r\n  onSave(row: number) {\r\n    this.isEditable[row] = false;\r\n\r\n    const personVM = this.personViewModels[row];\r\n    const updatedQuals = [...personVM.quals].filter(([_, value]) => value == 'X').map((key, _) => key[0]);\r\n\r\n    let personModel = this.personModels.get(personVM.id);\r\n    if (personModel) {\r\n      personModel.assigned_org = personVM.assigned_org;\r\n      personModel.quals = updatedQuals;\r\n      this.personAPI.update(personModel).subscribe();\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}