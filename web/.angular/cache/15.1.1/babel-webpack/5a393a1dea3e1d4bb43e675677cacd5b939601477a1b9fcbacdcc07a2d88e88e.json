{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const isAuthorized = false;\n    if (isAuthorized) return true;\n    this.router.navigateByUrl('/auth');\n    return false;\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.Router));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,YAAY,GAAG,KAAK;IAE1B,IAAIA,YAAY,EACd,OAAO,IAAI;IAEb,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,OAAO,CAAC;IAClC,OAAO,KAAK;EACd;;;mBAZWP,gBAAgB;AAAA;;SAAhBA,gBAAgB;EAAAQ,SAAhBR,gBAAgB;EAAAS,YAFf;AAAM","names":["AuthGuardService","constructor","router","canActivate","route","state","isAuthorized","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["/home/keelerjr/dev/sparkcell-autoscheduler/web/src/app/auth/auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    const isAuthorized = false;\n\n    if (isAuthorized)\n      return true;\n      \n    this.router.navigateByUrl('/auth')\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}