{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonnelAPIService {\n  constructor(http) {\n    this.http = http;\n    this.persons = [{\n      id: 1,\n      name: \"Keeler, Joshua\",\n      assigned_org: \"\",\n      quals: [\"Operations Supervisor\"]\n    }, {\n      id: 2,\n      name: \"Van Epps, Lucas\",\n      assigned_org: \"O\",\n      quals: [\"RSU Controller\", \"RSU Observer\"]\n    }];\n    this.apiUrl = 'localhost:8000/api/personnel';\n  }\n  getPersonnel() {\n    return this.http.get(this.apiUrl);\n  }\n}\nPersonnelAPIService.ɵfac = function PersonnelAPIService_Factory(t) {\n  return new (t || PersonnelAPIService)(i0.ɵɵinject(i1.HttpClient));\n};\nPersonnelAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonnelAPIService,\n  factory: PersonnelAPIService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAkB9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAhBtB,YAAO,GAAa,CAClB;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,gBAAgB;MACtBC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,CAAC,uBAAuB;KAChC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,iBAAiB;MACvBC,YAAY,EAAE,GAAG;MACjBC,KAAK,EAAE,CAAC,gBAAgB,EAAE,cAAc;KACzC,CACF;IACH,WAAM,GAAG,8BAA8B;EAEC;EAExCC,YAAY;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,IAAI,CAACC,MAAM,CAAC;EAC7C;;;mBAtBWT,mBAAmB;AAAA;;SAAnBA,mBAAmB;EAAAU,SAAnBV,mBAAmB;EAAAW,YAFlB;AAAM","names":["PersonnelAPIService","constructor","http","id","name","assigned_org","quals","getPersonnel","get","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["/home/keelerjr/dev/sparkcell-autoscheduler/web/src/app/core/services/personnel-api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Person } from '../models/person.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonnelAPIService {\n\n    persons: Person[] = [\n      {\n        id: 1,\n        name: \"Keeler, Joshua\",\n        assigned_org: \"\",\n        quals: [\"Operations Supervisor\"]\n      },\n      {\n        id: 2,\n        name: \"Van Epps, Lucas\",\n        assigned_org: \"O\",\n        quals: [\"RSU Controller\", \"RSU Observer\"]\n      }\n    ]\n  apiUrl = 'localhost:8000/api/personnel'\n\n  constructor(private http: HttpClient) { }\n\n  getPersonnel() : Observable<Person[]> {\n    return this.http.get<Person[]>(this.apiUrl);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}